library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;
entity fsm is 
	port( start, stop, clk, reset: in std_logic;
	en: out std_logic);
end fsm;
architecture beh of fsm is
	constant idle: std_logic_vector(1 downto 0):="00";
	constant running: std_logic_vector(1 downto 0):="01";
	signal cs, next_state: std_logic_vector (1 downto 0);
	begin
	process(reset, clk)
		begin
			if (reset='1') then
				cs<=idle;
			elsif (rising_edge(clk)) then
				cs <= next_state;
			end if;
		end process;
	process(cs, start)
		begin
		if(start='1') then
			next_state<=running;
		end if;
		end process;
	process(cs, stop)
		begin
		if(stop='1') then
			next_state<=idle;
		end if;
		end process;
	en<='0' when (cs=idle);
	en<='1' when (cs=running);
end beh;